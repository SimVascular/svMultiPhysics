name: 'Test Ubuntu'
description: 'Run tests on Ubuntu with coverage reporting'

inputs:
  codecov-token:
    description: 'Codecov token for uploading coverage reports'
    required: false
    default: ''

runs:
  using: 'composite'
  steps:
    - name: Build svZeroDSolver
      shell: bash
      run: |
        conda init
        source /conda/etc/profile.d/conda.sh
        conda activate svmultiphysics
        git clone https://github.com/SimVascular/svZeroDSolver.git
        cd svZeroDSolver
        mkdir build
        cd build
        cmake ..
        make -j2
        
    - name: Build svMultiPhysics
      shell: bash
      run: |
        if [ -d "build" ]; then
          rm -rf "build"
        fi
        mkdir build
        cd build
        cmake -DENABLE_COVERAGE=ON -DENABLE_ARRAY_INDEX_CHECKING=ON -DENABLE_UNIT_TEST=ON -DSV_USE_TRILINOS:BOOL=ON ..
        make -j2
        cd ..
        
    - name: Build svMultiPhysics (PETSc)
      shell: bash
      run: |
        if [ -d "build-petsc" ]; then
          rm -rf "build-petsc"
        fi
        mkdir build-petsc
        cd build-petsc
        cmake -DENABLE_COVERAGE=ON -DENABLE_ARRAY_INDEX_CHECKING=ON -DENABLE_UNIT_TEST=ON -DSV_PETSC_DIR:STRING=/petsc ..
        make -j2
        cd ..
        
    - name: Run integration tests
      shell: bash
      run: |
        git config --global --add safe.directory /__w/svMultiPhysics/svMultiPhysics
        git lfs pull
        cd tests
        conda run -n svmultiphysics pytest -rPv --durations=0
        
    - name: Run unit tests
      shell: bash
      run: |
        cd build/svMultiPhysics-build/Source/solver
        ctest --verbose
        
    - name: Generate code coverage
      shell: bash
      run: |
        cd build/svMultiPhysics-build
        make coverage
        
    - name: Save coverage report
      uses: actions/upload-artifact@v4
      with:
        name: coverage_report
        path: build/svMultiPhysics-build/coverage
        
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      env:
        CODECOV_TOKEN: ${{ inputs.codecov-token }}
